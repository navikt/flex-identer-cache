server:
  port: 8080

spring:
  main.banner-mode: 'off'
  profiles:
    active: default
  flyway:
    enabled: true
  datasource:
    url: "${DATABASE_JDBC_URL}"
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5
  kafka:
    client-id: ${nais.app.name}-${fasit.environment.name}
    consumer:
      group-id: ${nais.app.name}-${fasit.environment.name}
      max-poll-records: 1
      auto-offset-reset: earliest
      enable-auto-commit: false
    ssl:
      trust-store-location: file:${KAFKA_TRUSTSTORE_PATH}
      trust-store-password: ${KAFKA_CREDSTORE_PASSWORD}
      truststore-type: JKS
      key-store-location: file:${KAFKA_KEYSTORE_PATH}
      key-store-password: ${KAFKA_CREDSTORE_PASSWORD}
      keystore-type: PKCS12

management:
  endpoint:
    prometheus.enabled: true
    health.probes.enabled: true
  endpoints.web:
    base-path: "/internal"
    exposure.include: health, prometheus
  health:
    livenessstate.enabled: true
    readinessState.enabled: true
  prometheus:
    metrics.export.enabled: true

logging.config: "classpath:logback.xml"

no.nav.security.jwt:
  issuer:
    azureator:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
    tokenx:
      discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
      accepted_audience: ${TOKEN_X_CLIENT_ID}

#Blir satt i nais:
SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}
KAFKA_BROKERS: ${KAFKA_BROKERS}
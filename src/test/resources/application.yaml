spring:
  cache.type: redis
  profiles.active: test,cronjobber
  main.banner-mode: 'off'
  kafka:
    client-id: ${nais.app.name}-${fasit.environment.name}
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY}
      basic.auth.credentials.source: USER_INFO
      schema.registry.basic.auth.user.info: usr:pwd
      security:
        protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          type: PKCS12
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
    consumer:
      group-id: ${nais.app.name}-${fasit.environment.name}
      max-poll-records: 1
      auto-offset-reset: earliest
      enable-auto-commit: false

management:
  endpoint:
    prometheus.enabled: true
    health.probes.enabled: true
    health.show-details: always
  endpoints.web:
    base-path: "/internal"
    exposure.include: health, prometheus
  health:
    livenessstate.enabled: true
    readinessState.enabled: true
  metrics.export.prometheus.enabled: true

no.nav.security.jwt:
  issuer:
    azureator:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/azureator/.well-known/openid-configuration
      accepted_audience: flex-identer-cache-client-id
    tokenx:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/tokenx/.well-known/openid-configuration
      accepted_audience: flex-identer-cache-client-id

AZURE_APP_PRE_AUTHORIZED_APPS: "[]"
#{\"name\":\"dev-gcp:flex:sykepengesoknad-arkivering-oppgave\",\"clientId\":\"sykepengesoknad-arkivering-oppgave-client-id\"},{\"name\":\"dev-gcp:flex:flex-syketilfelle\",\"clientId\":\"flex-syketilfelle-client-id\"},{\"name\":\"dev-gcp:flex:flex-sykepengesoknad-backend\",\"clientId\":\"flex-sykepengesoknad-backend-client-id\"}

elector.path: dont_look_for_leader

SKRIVEMODUS: READWRITE
